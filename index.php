<?php
abstract class Shape{
    public $color;
    public $borderThickness;
    public $position = [];
    public function __construct($color,$borderThickness, $position){
        $this->color = $color;
        $this->borderThickness = $borderThickness;
        $this->position = $position;
    }

    public function draw(){
        $data =  "Цвет: $this->color; Толщина линии: $this->borderThickness; Позиция: x ".$this->position["0"].", y ".$this->position["1"]."\n\n";
        $this->setCache($data);

    }
    public function move($newPosition){
        $this->position = $newPosition;
    }
    public function resize($newSize){}
    public function newColor($newcolor){
        $this->color = $newcolor;
    }
    public function newBorderThickness($newBorderThickness){
        $this->borderThickness = $newBorderThickness;
    }
    public function setCache($data)
    {
        if (file_exists("cache.txt"))
        {
            echo $data;
            $cache = fopen("cache.txt", "a");
            fwrite($cache, $data);
            fclose($cache);
        }
        else echo "Файл cache.txt не найден\n";
    }
}
class Circle extends Shape{
    public $radius;
    public function __construct($color, $borderThickness, $position, $radius)
    {
        parent::__construct($color, $borderThickness, $position);
        $this->radius = $radius;
    }

    public function draw()
    {
        $data = "Круг с радиусом $this->radius см\n";
        $this->setCache($data);
        parent::draw();

         // TODO: Change the autogenerated stub

    }
    public function resize($newSize)
    {
        $this->radius = $this->radius * $newSize;// TODO: Implement resize() method.
    }
}
class Rectangle extends Shape{
    public $sideA;
    public $sideB;
    public function __construct($color, $borderThickness, $position, $sideA, $sideB)
    {
        parent::__construct($color, $borderThickness, $position);
        $this->sideA = $sideA;
        $this->sideB = $sideB;
    }
    public function draw()
    {
        $data = "Прямоугольник со сторонами: A = $this->sideA см, B = $this->sideB см\n";
        $this->setCache($data);
        parent::draw(); // TODO: Change the autogenerated stub

    }
    public function resize($newSize)
    {
        $this->sideA = $newSize * $this->sideA;// TODO: Implement resize() method.
        $this->sideB = $newSize * $this->sideB;
    }

}
class Triangle extends Shape{
    public $sideA;
    public $sideB;
    public $sideC;
    public function __construct($color, $borderThickness, $position, $sideA, $sideB, $sideC)
    {
        parent::__construct($color, $borderThickness, $position);
        $this->sideA = $sideA;
        $this->sideB = $sideB;
        $this->sideC = $sideC;
    }
    public function draw()
    {
        $data = "Треугольник со сторонами: A = $this->sideA см, B = $this->sideB см, C = $this->sideC\n";
        $this->setCache($data);
        parent::draw(); // TODO: Change the autogenerated stub

    }
    public function resize($newSize)
    {
        $this->sideA = $newSize * $this->sideA;// TODO: Implement resize() method.
        $this->sideB = $newSize * $this->sideB;
        $this->sideC = $newSize * $this->sideC;
    }
}
class Group
{
    public $nameGroup;
    public $shapes = [];

    public function __construct($nameGroup)
    {
        $this->nameGroup = $nameGroup;
    }

    public function draw(){
        $text = "Группа $this->nameGroup:\n";
        file_put_contents('cache.txt', $text, FILE_APPEND);
        echo $text;
        foreach ($this->shapes as $shape){
            $shape->draw();

        }
    }
    public function addShape(Shape $shape)
    {
        $this->shapes[] = $shape;
    }
    public function deleteShape(Shape $shape)
    {
        $index = array_search($shape, $this->shapes, true);
        unset($this->shapes[$index]);
    }
    public function resize($newResize){
        foreach ($this->shapes as $shape){
            $shape->resize($newResize);
        }
    }
    public function move($newPosition){
        foreach ($this->shapes as $shape){
           $shape->move([$shape->position[0] + $newPosition, $shape->position[1] + $newPosition]);
        }
    }
}

$circle1 = new Circle("Черный", 2, [5,10], 3);
$circle1->draw();
$circle1->newColor("Синий");
$circle1->draw();


$rectangle1 = new Rectangle("Желтый", 1, [100,250], 10,20);
$rectangle1->resize(1.1);
$rectangle1->draw();

$triangle1 = new Triangle("Красный", 3, [200,125], 30, 42, 15);
$triangle1->move([2,2]);
$triangle1->draw();

$group1 = new Group(1);
$group1->addShape($triangle1);
$group1->addShape($circle1);
$group1->resize(2);
$group1->move(5);
$group1->draw();
$group1->deleteShape($triangle1);
$group1->draw();

$cache = file_get_contents('cache.txt');
echo $cache;
?>